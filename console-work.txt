
s = Student()
c = Class()
c.children.append(s)
db.session.add(c)
db.session.commit()


u = User.query.filter_by(username='lndgrn').first()
u
<User u'lindg250'>
c = u.cv[0]
c
<Cv u'DropThis'>
bk = Book.query.first()
bk
<Book u'Understanding computer programming as an embodied practice of writing'>
c
<Cv u'DropThis'>
bk
<Book u'Understanding computer programming as an embodied practice of writing'>
c.books.append(bk)
db.session.commit()
c
<Cv u'DropThis'>
c.books
[<Book u'Understanding computer programming as an embodied practice of writing'>]
bk.cvs
[<Cv u'DropThis'>]













cv = Cv.query.filter_by(cvname='DropThis').first()
cv
<Cv u'DropThis'>
cv.book

bk = Book.query.filter_by(title='Understanding computer programming as an embodied practice of writing').first()

s = session()
john = Employee(name='john')
s.add(john)
it_department = Department(name='IT')
it_department.employees.append(john)
s.add(it_department)
s.commit()

u = User.query.filter_by(username='lindg250').first()
u
<User u'lindg250'>
u.cv[0]
<Cv u'Dropdown'>
u.cv[0].cvname
u'Dropdown'
dd = u.cv[0]
dd
<Cv u'Dropdown'>
dd.books
<sqlalchemy.orm.dynamic.AppenderBaseQuery object at 0x7ff1ea9d2690>
dd.book[0]
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'Cv' object has no attribute 'book'
dd
<Cv u'Dropdown'>
dd.book
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'Cv' object has no attribute 'book'
dd.cv
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'Cv' object has no attribute 'cv'
dd.user
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'Cv' object has no attribute 'user'
u
<User u'lindg250'>
u.name
u'Chris Lindgren \u2615\ufe0f'
dd
<Cv u'Dropdown'>
dd.cv
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'Cv' object has no attribute 'cv'
dd.books
<sqlalchemy.orm.dynamic.AppenderBaseQuery object at 0x7ff1ea9d2690>
dd.books.query.all()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'AppenderBaseQuery' object has no attribute 'query'
dd.query.all()
[<Cv u'Dropdown'>]
u.cv[].query.all()
  File "<console>", line 1
    u.cv[].query.all()
         ^
SyntaxError: invalid syntax
u.cv.query.all()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'AppenderBaseQuery' object has no attribute 'query'
u.cv
<sqlalchemy.orm.dynamic.AppenderBaseQuery object at 0x7ff1ea4c1dd0>
a = u.cv
a
<sqlalchemy.orm.dynamic.AppenderBaseQuery object at 0x7ff1ea4466d0>
a.items()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'AppenderBaseQuery' object has no attribute 'items'
for all in a:
... print(all)
  File "<console>", line 2
    print(all)
        ^
IndentationError: expected an indented block
for all in a:
...     print(all)
... 
<Cv u'Dropdown'>
dn = dd.books
for derp in dn:
...     print(derp)
... 
exit()
